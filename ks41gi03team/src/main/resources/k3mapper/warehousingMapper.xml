<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k3.warehousing.ahs.mapper.K3WarehousingMapper">
	<resultMap id="warehousingResultMap" type="K3Warehousing" >
 		<id column="warehousingCode" property="warehousingCode" />
		<result column="mainBusinessCode" property="mainBusinessCode" />
		<result column="contractorId" property="contractorId" />
 		<result column="productCode" property="productCode" />
		<result column="laydownGoodsCount" property="laydownGoodsCount" />
		<result column="manufacturedDate" property="manufacturedDate" />
		<result column="expiratonDate" property="expiratonDate" />
 		<result column="laydownRequestDate" property="laydownRequestDate" />
 		<result column="laydownDate" property="laydownDate" />
		<result column="productFrequency" property="productFrequency" />
 		<result column="laydownCheckCode" property="laydownCheckCode" />
		<result column="laydownCheckResult" property="laydownCheckResult" />
		<result column="laydownCheckManager" property="laydownCheckManager" />
		<result column="laydownCheckDate" property="laydownCheckDate" />
		<result column="warehousingAllow" property="warehousingAllow" />
		<result column="acceptDate" property="acceptDate" />
		<result column="sorting" property="sorting" />
			<association property="k3Contractor" javaType="K3Contractor">
				<id column="contractorId" property="contractorId"/>
				<result column="contractorName" property="contractorName" />
			</association>
			<association property="k3Product" javaType="K3Product">
			<id column="productCode" property="productCode"/>
			<result column="productName" property="productName" />
			</association>
	</resultMap>
	
	<!--로케이션 상태 업데이트(사용중으로) -->
	<update id="k3UpdateLocationState">
	UPDATE 
		k3_tb_location
	SET 
		locationState = "사용중"
	WHERE
		locationCode = #{locationCode};
	</update>
	
	<!--분류등록 입고테이블 업데이트  -->
	<update id="k3UpdateSorting">
	UPDATE 
		k3_tb_warehousing
	SET 
		sorting = "Y"
	WHERE
		warehousingCode = #{warehousingCode};
	</update>
	
	<!-- 분류등록 -->
	<insert id="k3AddWarehousingSort">
		INSERT INTO k3_tb_stock
			(stockCode, 
			warehousingCode, 
			locationCode, 
			categoryCode, 
			stockQuantity, 
			productFrequency, 
			pileupManager, 
			pileupDate)
		SELECT 
		   CONCAT(MAX(SUBSTRING(stockCode,1,5)), MAX(CAST(SUBSTRING(stockCode,6)AS DECIMAL))+ 1),
		   #{warehousingCode},
		   #{locationCode},
		   #{categoryCode},
		   #{stockQuantity},
		   #{productFrequency},
		   #{pileupManager},
		   #{pileupDate}
		FROM 
		  k3_tb_stock;
	
	</insert>
	
	<!--입고승인  -->
	<update id="k3AllowWarehousing" parameterType="map">
		UPDATE
			k3_tb_warehousing
		<trim prefix="SET" prefixOverrides=",">
			,warehousingAllow = #{YesOrNo}
			<if test="YesOrNo eq 'Y'.toString()">		   			
				,acceptDate = CURDATE()	
			</if>	
		</trim>	
		<trim prefix="WHERE" prefixOverrides="AND |OR">
			<foreach collection="allowList" item="allowList">
				OR warehousingCode = #{allowList}
			</foreach>			
		</trim>
	</update>
	
	<!--계약처 아이디로 계약처 이름 찾기(map)  -->
	<select id="k3FindContractorName" parameterType="map" resultType="map">
		SELECT
			cs.contractorId,
			cs.contractorName,
			cs.contractorType,
			cs.contractorRepresentative
		FROM
			k3_tb_contractor_staff AS cs
	
	</select>
	
	<!--입고조회  -->
	<select id="k3GetWarehousingSearchList" parameterType="Map" resultType="Map">
	SELECT
		   w.warehousingCode,
		   p.productName,
		   w.laydownGoodsCount,
		   w.manufacturedDate,
		   w.expiratonDate,
		   c.contractorName,
		   w.laydownDate,
		   w.laydownCheckCode,
		   IFNULL(w.laydownCheckResult,'') AS laydownCheckResult,
		   w.laydownCheckDate,
		   m.memberName,
		   w.laydownCheckResult,
		   w.sorting
		FROM
		   k3_tb_warehousing AS w
		   INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode
		   INNER JOIN
		   k3_tb_contractor_staff AS c
		   on
		   w.contractorId = c.contractorId
		   INNER JOIN
		   k3_tb_member AS m
		   ON
		   w.laydownCheckManager = m.memberId
		   <choose>
			   <when test="searchCondition.searchWarehousingType != null and searchCondition.searchWarehousingType != ''.toString()">
				   <trim prefix="WHERE" prefixOverrides="AND |OR">
						<if test="searchCondition.warehousingValue != null and searchCondition.warehousingValue != ''.toString()">
				   			${searchCondition.warehousingKey} LIKE CONCAT('%',#{searchCondition.warehousingValue},'%') 
						</if>	
						<if test="searchCondition.searchStartDate != null and searchCondition.searchStartDate != ''.toString()">
				   			AND ${searchCondition.warehousingDateKey} >= #{searchCondition.searchStartDate}
						</if>	
						<if test="searchCondition.searchEndDate != null and searchCondition.searchEndDate != ''.toString()">
				   			AND #{searchCondition.searchEndDate} >=  ${searchCondition.warehousingDateKey}
						</if>
						And w.warehousingAllow = 'Y' AND w.laydownCheckResult = 'Y'
				   </trim>
			   </when>
			   <otherwise>
				WHERE 
					w.warehousingAllow = 'Y' and w.laydownCheckResult = 'Y'	
			   </otherwise>
		   </choose>
			<if test="paramMap.startNum != null">
				LIMIT #{paramMap.startNum}, #{paramMap.rowPerPage};
			</if>		   
	</select>
	<!--입고요청 등록처리  -->
	<insert id="k3AddWarehousing">
		INSERT INTO
		   k3_tb_warehousing
			(warehousingCode, mainBusinessCode, contractorId, productCode, laydownGoodsCount, manufacturedDate, expiratonDate, laydownRequestDate, productFrequency)
		SELECT 
		   CONCAT(MAX(SUBSTRING(warehousingCode,1,11)), MAX(CAST(SUBSTRING(warehousingCode,12)AS DECIMAL))+ 1),
		   "물류센터A물류센터_전북_1",
		   #{contractorId},
		   #{productCode},
		   #{laydownGoodsCount},
		   #{manufacturedDate},
		   #{expiratonDate},
		   #{laydownRequestDate},
		   #{productFrequency}
		FROM 
		  k3_tb_warehousing;
	</insert>
	
	<!--계약처아이디로 계약처 이름찾아오기  -->
	<select id="k3FindContractorNameByCode" resultType="K3Contract">
		SELECT
			cs.contractorId,
			cs.contractorName,
			cs.contractorType,
			cs.contractorRepresentative
		FROM
			k3_tb_contractor_staff AS cs;
	</select>
	
	<!--입고요청 목록  -->
	<select id="k3RequestAllowWarehousing" resultMap="warehousingResultMap">
		SELECT
			w.warehousingCode,
			p.productName,
			w.laydownGoodsCount,
			cs.contractorName,
			w.manufacturedDate,
			w.expiratonDate
		FROM
			k3_tb_warehousing AS w
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			w.contractorId = cs.contractorId
		WHERE w.warehousingAllow = 'N'		
	</select>
	
	<!--입고 현황(초기화면) - 입고리스트  -->
	<select id="k3GetWarehousingList" resultType="map" parameterType="map">
		SELECT
		   w.warehousingCode,
		   w.laydownCheckCode,
		   w.mainBusinessCode,
		   p.productName,
		   w.laydownGoodsCount,
		   w.manufacturedDate,
		   w.expiratonDate,
		   c.contractorName,
		   w.laydownDate,
		   IFNULL(w.laydownCheckResult,'') AS laydownCheckResult,
		   w.sorting
		FROM
		   k3_tb_warehousing AS w
		   INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode
		   INNER JOIN
		   k3_tb_contractor_staff AS c
		   on
		   w.contractorId = c.contractorId
		WHERE
			w.warehousingAllow = 'Y' AND w.laydownCheckResult = 'Y'	
		<if test="startNum != null">
			LIMIT #{startNum}, #{rowPerPage};
		</if>
	</select>
	
	<!--입고 현황(초기화면) - 입고리스트 튜플 수  -->
	<select id="k3GetWarehousingCount" resultType="int" fetchSize="1000">
		SELECT
			COUNT(1)
		FROM
			k3_tb_warehousing AS w
			INNER JOIN
			k3_tb_contractor_staff AS c
			on
			w.contractorId = c.contractorId
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode
		WHERE
			w.warehousingAllow = 'Y' AND w.laydownCheckResult = 'Y'	
		<if	test="countType eq 'search'.toString()">
		   <if test="searchCondition.searchWarehousingType != null and searchCondition.searchWarehousingType != ''.toString()">
				<if test="searchCondition.warehousingValue != null and searchCondition.warehousingValue != ''.toString()">
		   			AND ${searchCondition.warehousingKey} LIKE CONCAT('%',#{searchCondition.warehousingValue},'%') 
				</if>	
				<if test="searchCondition.searchStartDate != null and searchCondition.searchStartDate != ''.toString()">
		   			AND ${searchCondition.warehousingDateKey} >= #{searchCondition.searchStartDate}
				</if>	
				<if test="searchCondition.searchEndDate != null and searchCondition.searchEndDate != ''.toString()">
		   			AND #{searchCondition.searchEndDate} >=  ${searchCondition.warehousingDateKey}
				</if>
		   </if>		
		</if>
	</select>

</mapper>