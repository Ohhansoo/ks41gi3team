<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k3.warehousing.ahs.mapper.K3WarehousingMapper">
	<resultMap type="K3Warehousing" id="warehousingResultMap">
 		<result column="warehousingCode" property="warehousingCode" />
 		<result column="laydownCheckCode" property="laydownCheckCode" />
		<result column="mainBusinessCode" property="mainBusinessCode" />
		<result column="contractorName" property="contractorName" />
		<result column="contractorId" property="contractorId" />
		<result column="laydownGoodsName" property="laydownGoodsName" />
		<result column="laydownGoodsCount" property="laydownGoodsCount" />
		<result column="manufacturedDate" property="manufacturedDate" />
		<result column="expiratonDate" property="expiratonDate" />
		<result column="laydownDate" property="laydownDate" />
		<result column="laydownCheckResult" property="laydownCheckResult" />
		<result column="laydownCheckManager" property="laydownCheckManager" />
		<result column="laydownCheckDate" property="laydownCheckDate" />
		<result column="dockName" property="dockName" />
	</resultMap>
	
	<update id="k3UpdateLocationState">
	UPDATE 
		k3_tb_location
	SET 
		locationState = "사용중"
	WHERE
		locationCode = #{locationCode};
	</update>
	
	<!--분류등록 입고테이블 업데이트  -->
	<update id="k3UpdateSorting">
	UPDATE 
		k3_tb_warehousing
	SET 
		sorting = "Y"
	WHERE
		warehousingCode = #{warehousingCode};
	</update>
	
	<!-- 분류등록 -->
	<insert id="k3AddWarehousingSort">
	INSERT INTO k3_tb_pileup
		(pileupCode, 
		warehousingCode, 
		locationCode, 
		categoryCode, 
		stockQuantity, 
		productFrequency, 
		sortingManager, 
		sortingDate)
	SELECT 
		   CONCAT(MAX(SUBSTRING(pileupCode,1,6)), MAX(CAST(SUBSTRING(pileupCode,7)AS DECIMAL))+ 1),
		   #{warehousingCode},
		   #{locationCode},
		   #{categoryCode},
		   #{stockQuantity},
		   #{productFrequency},
		   #{sortingManager},
		   #{sortingDate}
		FROM 
		  k3_tb_pileup;
	
	</insert>
	
	<update id="k3AllowWarehousing" parameterType="map">
		UPDATE
			k3_tb_warehousing
		<trim prefix="SET" prefixOverrides=",">
			,warehousingAllow = #{YesOrNo}
			<if test="YesOrNo eq 'Y'.toString()">		   			
				,acceptDate = CURDATE()	
			</if>	
		</trim>	
		<trim prefix="WHERE" prefixOverrides="AND |OR">
			<foreach collection="allowList" item="allowList">
				OR warehousingCode = #{allowList}
			</foreach>			
		</trim>
	</update>
	

	<select id="k3FindContractorName" parameterType="map" resultType="map">
		SELECT
			cs.contractorId,
			cs.contractorName,
			cs.contractorType,
			cs.contractorRepresentative
		FROM
			k3_tb_contractor_staff AS cs
	
	</select>
	
	<select id="k3GetWarehousingSearchList" parameterType="Map" resultType="K3Warehousing">
	SELECT
		   w.warehousingCode,
		   w.laydownGoodsName,
		   w.laydownGoodsCount,
		   w.manufacturedDate,
		   w.expiratonDate,
		   c.contractorName,
		   w.laydownDate,
		   w.laydownCheckCode,
		   w.laydownCheckResult,
		   w.warehousingDay,
		   w.laydownCheckDate,
		   m.memberName,
		   w.laydownCheckResult
		FROM
		   k3_tb_warehousing AS w
		   INNER JOIN
		   k3_tb_contractor_staff AS c
		   on
		   w.contractorId = c.contractorId
		   INNER JOIN
		   k3_tb_member AS m
		   ON
		   w.laydownCheckManager = m.memberId
		   <trim prefix="WHERE" prefixOverrides="AND |OR">
				<if test="warehousingValue != null and warehousingValue != ''.toString()">
		   			${warehousingKey} LIKE CONCAT('%',#{warehousingValue},'%') 
				</if>	
				<if test="searchStartDate != null and searchStartDate != ''.toString()">
		   			AND ${warehousingDateKey} >= #{searchStartDate}
				</if>	
				<if test="searchEndDate != null and searchEndDate != ''.toString()">
		   			AND #{searchEndDate} >=  ${warehousingDateKey}
				</if>
		   </trim>
	</select>
		<!--입고 등록처리  -->
	<insert id="k3AddWarehousing">
		INSERT INTO
		   k3_tb_warehousing
			(warehousingCode, mainBusinessCode, contractorId, laydownGoodsName, laydownGoodsCount, manufacturedDate, expiratonDate, laydownRequestDate)
		SELECT 
		   CONCAT(MAX(SUBSTRING(warehousingCode,1,11)), MAX(CAST(SUBSTRING(warehousingCode,12)AS DECIMAL))+ 1),
		   "물류센터A물류센터_전북_1",
		   #{contractorId},
		   #{laydownGoodsName},
		   #{laydownGoodsCount},
		   #{manufacturedDate},
		   #{expiratonDate},
		   #{laydownRequestDate}
		FROM 
		  k3_tb_warehousing;
	</insert>
	
	<select id="k3FindContractorNameByCode" resultType="K3Contract">
		SELECT
			cs.contractorId,
			cs.contractorName,
			cs.contractorType,
			cs.contractorRepresentative
		FROM
			k3_tb_contractor_staff AS cs;
	</select>
	
	<select id="k3RequestAllowWarehousing" resultType="K3Warehousing">
		SELECT
			w.warehousingCode,
			w.laydownGoodsName,
			w.laydownGoodsCount,
			cs.contractorName,
			w.manufacturedDate,
			w.expiratonDate
		FROM
			k3_tb_warehousing AS w
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			w.contractorId = cs.contractorId
		WHERE w.warehousingAllow = 'N'	
	</select>
	
	
	<select id="k3GetWarehousingRequestSort" resultType="K3WarehousingSort">
		SELECT
			w.laydownCheckCode,
			w.laydownGoodsName,
			w.laydownGoodsCount,
			w.laydownDate,
			c.contractorName	
		FROM
			k3_tb_warehousing AS w
			INNER JOIN
			k3_tb_contractor_staff AS c
			on
			w.contractorId = c.contractorId
		WHERE
			w.sorting = 'N' AND w.laydownCheckResult = 'Y';
	</select>
	
	<select id="k3GetWarehousingSortList" resultType="K3WarehousingSort">
		SELECT
			w.laydownCheckCode,
			w.laydownGoodsName,
			p.stockQuantity,
			c.contractorName,
			t.largeCategory,
			t.mediumCategory,
			t.smallCategory,
			p.productFrequency,
			p.locationCode,
			m.memberName,
			p.sortingDate		
		FROM
			k3_tb_pileup AS p
			INNER JOIN
			k3_tb_warehousing AS w
			on
			w.warehousingCode = p.warehousingCode
			INNER JOIN
			k3_tb_contractor_staff AS c
			on
			w.contractorId = c.contractorId
			INNER JOIN
			k3_tb_member AS m
			on
			p.sortingManager = m.memberId			
			INNER JOIN
			k3_tb_total_category AS t
			on
			p.categoryCode = t.categoryCode
		WHERE
			w.sorting = 'Y' AND w.laydownCheckResult = 'Y'	
	</select>
	
	<!--입고 현황(초기화면) - 입하검수리스트  -->	
	<select id="k3GetLaydownCheck" resultType="K3Warehousing">
		SELECT
		   w.warehousingCode,
		   w.laydownCheckCode,
		   w.mainBusinessCode,
		   w.laydownGoodsName,
		   w.laydownGoodsCount,
		   w.manufacturedDate,
		   w.expiratonDate,
		   c.contractorName,
		   w.laydownDate,
		   m.memberName,
		   w.laydownCheckDate,
		   w.laydownCheckResult
		FROM
		   k3_tb_warehousing AS w
		   INNER JOIN
		   k3_tb_contractor_staff AS c
		   on
		   w.contractorId = c.contractorId
		   INNER JOIN
		   k3_tb_member AS m
		   ON
		   w.laydownCheckManager = m.memberId
		WHERE
			w.laydownCheckResult is not null;
	</select>
	
	<!--입고 현황(초기화면) - 입고리스트  -->
	<select id="k3GetWarehousingList" resultType="K3Warehousing">
		SELECT
		   w.warehousingCode,
		   w.laydownCheckCode,
		   w.mainBusinessCode,
		   w.laydownGoodsName,
		   w.laydownGoodsCount,
		   w.manufacturedDate,
		   w.expiratonDate,
		   c.contractorName,
		   w.laydownDate
		FROM
		   k3_tb_warehousing AS w
		   INNER JOIN
		   k3_tb_contractor_staff AS c
		   on
		   w.contractorId = c.contractorId
		WHERE
			w.warehousingAllow = 'Y' and w.sorting = 'Y'

	</select>

</mapper>