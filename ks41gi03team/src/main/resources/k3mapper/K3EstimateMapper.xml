<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k3.estimate.ahs.mapper.K3EstimateMapper">

	<!-- 견적서 등록페이지 거래처 모달창 -->
	<select id="K3GetContractor" resultType="K3Contractor">
		SELECT 
			cs.contractorName,
			c.contractorCode
		FROM 
			k3_tb_contractor AS c
			INNER join
			k3_tb_contractor_staff AS cs
			on
			c.contractorId = cs.contractorId
		WHERE
			 cs.mainBusinessCode = '물류센터A물류센터_전북_1'
			 and
			 c.contractorDevision = '매출';
	</select>

	<!-- 견적서 상세정보 -->
	<select id="k3GetDetailEstimate" parameterType="String" resultType="K3Estimate">
		SELECT
			e.estimateNum
			,e.contractorCode
			,FORMAT(estimatePrice, 0) as estimatePrice
			,FORMAT(estimatePricePrepayment, 0) as estimatePricePrepayment
			,FORMAT(estimatePriceMonth, 0) as estimatePriceMonth
			,FORMAT(estimateUnitPrice, 0) as estimateUnitPrice
			,e.estimateMeasureDate
			,e.memberId
			,es.estimateDetailNum
			,es.mainBusinessCode
			,es.UnitPriceCode
			,es.unitContractDevisionAmount
			,es.unitContractWarehouseType
			,es.estimateContractTerm
			,cs.contractorName
			,u.unitContract
			,u.unitContractDevision
		FROM
			(((k3_tb_estimate AS e
			INNER join
			k3_tb_estimate_detail AS es
			on
			e.memberId = es.memberId)
			INNER join
			k3_tb_contractor AS c
			ON
			e.contractorCode = c.contractorCode)
			INNER join
			k3_tb_contractor_staff AS cs
			on
			c.contractorId = cs.contractorId)
			INNER join
			k3_tb_warehouse_unit_price AS u
			on
			u.UnitPriceCode = es.UnitPriceCode			
		WHERE
			e.estimateNum = #{estimateNum};
	</select>


	<!-- 검색된 견적서 투플 수 -->
	<select id="K3SearchEstimateCount" parameterType="map" resultType="map">
		SELECT
			e.estimateNum
			,e.contractorCode
			,cs.contractorName
			,FORMAT(estimatePrice, 0) as estimatePrice
			,e.estimateMeasureDate
			,e.memberId
		FROM
			(k3_tb_contractor AS c
			INNER join
			k3_tb_contractor_staff AS cs
			on
			c.contractorId = cs.contractorId)
			INNER JOIN
			k3_tb_estimate AS e
			on
			e.contractorCode = c.contractorCode
		<trim prefix="WHERE" prefixOverrides="AND |OR">
			c.contractorDevision = '매출'
			<if test="estimateMeasureDateStart != null and estimateMeasureDateStart != ''.toString() 
						and estimateMeasureDateEnd != null and estimateMeasureDateEnd != ''.toString()">
				AND e.estimateMeasureDate
	 			BETWEEN #{estimateMeasureDateStart} AND #{estimateMeasureDateEnd}
			</if>
			<if test='searchValue != null and searchValue != "".toString() and searchKey != "contractorId" and searchKey != "memberId"'>
				AND ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test='searchKey == "memberId" || searchKey == "contractorCode"'>
				AND e.${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
		</trim>	
	</select>
	<!-- END 검색된 견적서 투플 수 -->

	<!-- 견적서 검색 (페이징)-->
	<select id="K3SearchEstimateList" parameterType="map" resultType="map">
		SELECT
			e.estimateNum
			,e.contractorCode
			,cs.contractorName
			,FORMAT(estimatePrice, 0) as estimatePrice
			,e.estimateMeasureDate
			,e.memberId
		FROM
			(k3_tb_contractor AS c
			INNER join
			k3_tb_contractor_staff AS cs
			on
			c.contractorId = cs.contractorId)
			INNER JOIN
			k3_tb_estimate AS e
			on
			e.contractorCode = c.contractorCode
		<trim prefix="WHERE" prefixOverrides="AND |OR">
			c.contractorDevision = '매출'
			<if test="estimateMeasureDateStart != null and estimateMeasureDateStart != ''.toString() 
						and estimateMeasureDateEnd != null and estimateMeasureDateEnd != ''.toString()">
				AND e.estimateMeasureDate
	 			BETWEEN #{estimateMeasureDateStart} AND #{estimateMeasureDateEnd}
			</if>
			<if test='searchValue != null and searchValue != "".toString() and searchKey != "contractorId" and searchKey != "memberId"'>
				AND e.${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
			<if test='searchKey == "memberId" || searchKey == "contractorCode"'>
				AND e.${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
		</trim>	
		ORDER BY
			e.estimateMeasureDate DESC
		<if test="paramMap.startNum != null">
			LIMIT #{paramMap.startNum}, #{paramMap.rowPerPage};
		</if>
	</select>
	<!--END 견적서 검색 (페이징)-->


	<!-- 견적서 투플 수(페이징) -->
	<select id="K3GetEstimateCount" resultType="int" fetchSize="1000">
		SELECT
			COUNT(1)
		FROM
			(k3_tb_contractor AS c
			INNER join
			k3_tb_contractor_staff AS cs
			on
			c.contractorId = cs.contractorId)
			INNER JOIN
			k3_tb_estimate AS e
			on
			e.contractorCode = c.contractorCode
		where
			c.contractorDevision = '매출';
	</select>

	<!-- 견적서 목록 간단 현황으로 불러오기(페이징) -->
	
	<select id="K3GetEstimateList" parameterType="map" resultType="map" >
		SELECT
			e.estimateNum
			,e.contractorCode
			,cs.contractorName
			,FORMAT(estimatePrice, 0) as estimatePrice
			,e.estimateMeasureDate
			,e.memberId
		FROM
			(k3_tb_contractor AS c
			INNER join
			k3_tb_contractor_staff AS cs
			on
			c.contractorId = cs.contractorId)
			INNER JOIN
			k3_tb_estimate AS e
			on
			e.contractorCode = c.contractorCode
		where
			c.contractorDevision = '매출'
		ORDER BY
			e.estimateMeasureDate DESC
		<if test="startNum != null">
			LIMIT #{startNum}, #{rowPerPage};
		</if>			
		
	</select>

</mapper>