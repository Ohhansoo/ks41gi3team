<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k3.release.ahs.mapper.K3ReleaseMapper">
	<resultMap id="releaseResultMap" type="K3Release" >
 		<id column="releaseCode" property="releaseCode" />
 		<result column="stockCode" property="stockCode" />
 		<result column="contractorId" property="contractorId" />
 		<result column="productCode" property="productCode" />
 		<result column="releaseMergeCode" property="releaseMergeCode" />
		<result column="releaseGoodsCount" property="releaseGoodsCount" />
		<result column="area" property="area" />
		<result column="shippingAddress" property="shippingAddress" />
		<result column="shippingDetailAddress" property="shippingDetailAddress" />
		<result column="recipientName" property="recipientName" />
		<result column="recipientPhone" property="recipientPhone" />
		<result column="releaseManager" property="releaseManager" />
		<result column="releaseAllow" property="releaseAllow" />
		<result column="acceptDate" property="acceptDate" />
		<result column="releaseDate" property="releaseDate" />
		<result column="releaseRequestDate" property="releaseRequestDate" />
		<result column="shipmentCheckManager" property="shipmentCheckManager" />
		<result column="shipmentCheckRegDate" property="shipmentCheckRegDate" />
		<result column="shipmentCheckResult" property="shipmentCheckResult" />
		
		<association property="k3Contractor" javaType="K3Contractor">
			<id column="contractorId" property="contractorId" />
			<result column="contractorName" property="contractorName" />
		</association>
		<association property="k3Product" javaType="K3Product">
			<id column="productCode" property="productCode" />
			<result column="productName" property="productName" />
		</association>
		<association property="k3Stock" javaType="K3Stock">
			<id column="stockCode" property="stockCode"/>
			<result column="stockQuantity" property="stockQuantity" />
		</association>
	</resultMap>
	<!-- <ajax> 요청 리스트 개수 전달(요청 알림) -->
	<select id="k3CountRequestReleaseList" resultType="int">
		SELECT
			COUNT(1)
		FROM
			k3_tb_release AS r
			INNER JOIN
			k3_tb_stock AS s
			ON
			r.stockCode = s.stockCode
			INNER JOIN
			k3_tb_warehousing AS w
			ON
			s.warehousingCode = w.warehousingCode
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			w.contractorId = cs.contractorId
		WHERE
			r.releaseAllow = 'N'
	</select>
	
	<!--<모달>-통합출고코드 생성코드 전달  -->
	<select id="k3CreateReleaseMergeCode" resultType="String">
		SELECT
			CONCAT(MAX(SUBSTRING(releaseMergeCode,1,13)),CAST(MAX(SUBSTRING(releaseMergeCode,14))AS DECIMAL) + 1) AS releaseMergeCode
		FROM
			k3_tb_release
	</select>
	
	<!--<모달>-통합출고코드 리스트 가져오기  -->
	<select id="k3FindReleaseMergeCode" resultType="map">
		SELECT 
			r.releaseCode,
			r.releaseMergeCode,
			p.productName,
			s.pileupDate
		FROM
			k3_tb_release AS r
			INNER JOIN
			k3_tb_product AS p
			ON
			r.productCode = p.productCode
			INNER JOIN
			k3_tb_stock AS s
			ON
			r.stockCode = s.stockCode
	</select>
	
	<!-- 출고 요청 등록 -->
	<insert id="k3AddRelease">
		INSERT INTO k3_tb_release
			(releaseCode, stockCode, contractorId, productCode, releaseMergeCode, releaseGoodsCount, area, postCode, shippingAddress, shippingDetailAddress, recipientName, recipientPhone, releaseRequestDate)
			SELECT
				CONCAT(MAX(SUBSTRING(releaseCode,1,7)),CAST(MAX(SUBSTRING(releaseCode,8))AS DECIMAL) + 1), 
				#{stockCode},
				(SELECT DISTINCT w.contractorId
				 FROM
					k3_tb_stock AS s
					INNER JOIN
					k3_tb_warehousing AS w
					ON
					s.warehousingCode = w.warehousingCode
				 WHERE
				 	s.stockCode = #{stockCode}) AS contractorId,				 
				(SELECT DISTINCT w.productCode
				 FROM
					k3_tb_stock AS s
					INNER JOIN
					k3_tb_warehousing AS w
					ON
					s.warehousingCode = w.warehousingCode
				 WHERE
				 	s.stockCode = #{stockCode}) AS productCode,				 
				#{releaseMergeCode}, 
				#{releaseGoodsCount}, 
				#{area},
				#{postCode},
				#{shippingAddress},
				#{shippingDetailAddress},
				#{recipientName},
				#{recipientPhone},
				#{releaseRequestDate}
			FROM
				k3_tb_release
	</insert>
	
	<!-- 모달  : 상품명 찾기-->
	<select id="k3FindProductNameList" parameterType="map" resultType="map">
		SELECT
			s.stockCode,
			p.productName,
			s.stockQuantity,
			w.manufacturedDate,
			w.expiratonDate
			
		FROM
			k3_tb_stock AS s
			INNER JOIN
			k3_tb_warehousing AS w
			ON
			s.warehousingCode = w.warehousingCode
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode
	
	</select>
	
	<!--출고승인  -->
	<update id="k3AllowRelease" parameterType="map">
		UPDATE
			k3_tb_release
		<trim prefix="SET" prefixOverrides=",">
			,releaseAllow = #{YesOrNo}
			<if test="YesOrNo eq 'Y'.toString()">		   			
				,acceptDate = CURDATE()
			</if>	
		</trim>	
		<trim prefix="WHERE" prefixOverrides="AND |OR">
			<foreach collection="allowList" item="allowList">
				OR releaseCode = #{allowList}
			</foreach>			
		</trim>
	</update>
	
	<!-- 출고 승인 리스트 -->
	<select id="k3RequestAllowRelease" resultMap="releaseResultMap">
		SELECT
			r.releaseCode,
			r.releaseMergeCode,
			p.productName,
			r.releaseGoodsCount,
			cs.contractorName,
			r.area,
			r.shippingAddress,
			r.shippingDetailAddress,
			r.releaseRequestDate
		FROM
			k3_tb_release AS r
			INNER JOIN
			k3_tb_stock AS s
			ON
			r.stockCode = s.stockCode
			INNER JOIN
			k3_tb_warehousing AS w
			ON
			s.warehousingCode = w.warehousingCode
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			w.contractorId = cs.contractorId
		WHERE
			r.releaseAllow = 'N'
	</select>
	
	<!--출고조회  -->
	<select id="k3GetReleaseSearchList" parameterType="Map" resultType="Map">
		SELECT
			r.releaseCode,
			r.releaseMergeCode,
			p.productName,
			r.releaseGoodsCount,
			cs.contractorName,
			r.area,
			r.shippingAddress,
			r.shippingDetailAddress,
			r.recipientName,
			r.recipientPhone
		FROM
			k3_tb_release AS r
			INNER JOIN
			k3_tb_stock AS s
			ON
			r.stockCode = s.stockCode
			INNER JOIN
			k3_tb_warehousing AS w
			ON
			s.warehousingCode = w.warehousingCode
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode			
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			w.contractorId = cs.contractorId
		   <choose>
			   <when test="searchCondition.searchReleaseType != null and searchCondition.searchReleaseType != ''.toString()">
				   <trim prefix="WHERE" prefixOverrides="AND |OR">
						<if test="searchCondition.releaseValue != null and searchCondition.releaseValue != ''.toString()">
				   			${searchCondition.releaseKey} LIKE CONCAT('%',#{searchCondition.releaseValue},'%') 
						</if>	
						And r.shipmentCheckResult = 'Y'
				   </trim>
			   </when>
			   <otherwise>
				WHERE 
					r.releaseAllow = 'Y'
			   </otherwise>
		   </choose>
			<if test="paramMap.startNum != null">
				LIMIT #{paramMap.startNum}, #{paramMap.rowPerPage};
			</if>		   
	</select>
	
	<!--출고 현황(초기화면) - 출고리스트  -->
	<select id="k3GetReleaseList" resultType="map" parameterType="map">
		SELECT
			r.releaseCode,
			r.releaseMergeCode,
			p.productName,
			r.releaseGoodsCount,
			cs.contractorName,
			r.area,
			r.shippingAddress,
			r.shippingDetailAddress,
			r.recipientName,
			r.recipientPhone
		FROM
			k3_tb_release AS r
			INNER JOIN
			k3_tb_stock AS s
			ON
			r.stockCode = s.stockCode
			INNER JOIN
			k3_tb_warehousing AS w
			ON
			s.warehousingCode = w.warehousingCode
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode			
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			w.contractorId = cs.contractorId
		WHERE
			r.shipmentCheckResult = 'Y'
		<if test="startNum != null">
			LIMIT #{startNum}, #{rowPerPage};
		</if>
	</select>
	
	<!--출고 현황(초기화면) - 출고리스트 튜플 수  -->
	<select id="k3GetReleaseCount" resultType="int" fetchSize="1000">
		SELECT
			COUNT(1)
		FROM
			k3_tb_release AS r
			INNER JOIN
			k3_tb_stock AS s
			ON
			r.stockCode = s.stockCode
			INNER JOIN
			k3_tb_warehousing AS w
			ON
			s.warehousingCode = w.warehousingCode
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode			
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			w.contractorId = cs.contractorId
		WHERE
			r.shipmentCheckResult = 'Y'
		<if	test="countType eq 'search'.toString()">
		   <if test="searchCondition.searchReleaseType != null and searchCondition.searchReleaseType != ''.toString()">
				<if test="searchCondition.releaseValue != null and searchCondition.releaseValue != ''.toString()">
		   			AND ${searchCondition.releaseKey} LIKE CONCAT('%',#{searchCondition.releaseValue},'%') 
				</if>	
		   </if>		
		</if>
	</select>
	

</mapper>