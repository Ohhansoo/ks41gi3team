<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k3.release.ahs.mapper.K3ShipmentCheckMapper">
	<resultMap id="releaseResultMap" type="K3Release">
 		<result column="releaseCode" property="releaseCode" />
 		<result column="contractorId" property="contractorId" />
 		<result column="productCode" property="productCode" />
 		<result column="releaseMergeCode" property="releaseMergeCode" />
		<result column="releaseGoodsCount" property="releaseGoodsCount" />
		<result column="contractorId" property="contractorId" />
		<result column="acceptDate" property="acceptDate" />
		<result column="releaseRequestDate" property="releaseRequestDate" />
		<result column="releaseDate" property="releaseDate" />
		<result column="recipientName" property="recipientName" />
		<result column="shipmentCheckManager" property="shipmentCheckManager" />
		<result column="shipmentCheckRegDate" property="shipmentCheckRegDate" />
		<result column="shipmentCheckResult" property="shipmentCheckResult" />
			<association property="k3Contractor" javaType="K3Contractor">
				<id column="contractorId" property="contractorId"/>
				<result column="contractorName" property="contractorName" />
			</association>
			<association property="k3Product" javaType="K3Product">
				<id column="productCode" property="productCode"/>
				<result column="productName" property="productName" />
			</association>
			<association property="k3MemberUser" javaType="K3MemberUser">
				<id column="memberId" property="memberId"/>
				<result column="memberName" property="memberName" />
			</association>
			<association property="k3Stock" javaType="K3Stock">
				<id column="stockCode" property="stockCode"/>
				<result column="stockQuantity" property="stockQuantity" />
			</association>
	</resultMap>
	
	<!--출하검수 삭제처리  -->
	<delete id="k3DeleteShipment" parameterType="list">
		DELETE
			r
		FROM
			k3_tb_release AS r
			<trim prefix="WHERE" prefixOverrides="AND |OR">
				<foreach collection="list" item="deleteList">
					 or releaseCode = #{deleteList}
				</foreach>
			</trim>
	</delete>
	
	<!-- 출하검수 등록하기 -->
	<update id="k3AddShipmentCheck">
		UPDATE
			k3_tb_release
		SET
			releaseMergeCode = #{k3Release.releaseMergeCode},
			shipmentCheckResult = #{k3Release.shipmentCheckResult},
			shipmentCheckManager = #{k3Release.shipmentCheckManager},
			releaseDate = #{k3Release.releaseDate},
			shipmentCheckRegDate = #{k3Release.shipmentCheckRegDate},
			releaseGoodsCount = #{modifyGoodsCount}
		WHERE
			releaseCode = #{k3Release.releaseCode};
	</update>	
	
	<!--출하검수 등록/수정 페이지 이동(물품명, 개수 세팅)  -->
	<select id="k3GetShipmentCheckUpdateList" resultMap="releaseResultMap"> 
		SELECT
			r.releaseCode
			,r.releaseMergeCode
			,p.productName
			,r.releaseGoodsCount
			,cs.contractorName
			,r.stockCode
			,s.stockQuantity		
			<if test="type eq 'modify'.toString()">			
				,r.shipmentCheckResult
				,r.releaseDate
				,r.shipmentCheckManager
				,r.shipmentCheckRegDate
				,m.memberName
			</if>
		FROM
			k3_tb_release AS r
			INNER JOIN
			k3_tb_product AS p
			ON
			r.productCode = p.productCode
			INNER JOIN
			k3_tb_stock AS s
			ON
			r.stockCode = s.stockCode
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			r.contractorId = cs.contractorId
			<if test="type eq 'modify'.toString()">	
			INNER JOIN
			k3_tb_member AS m
			ON
			r.shipmentCheckManager = m.memberId
			</if>
		WHERE
			releaseCode = #{releaseCode};
	</select>
	
	<!-- 출하현황  -->
	<select id="k3GetShipmentCheckList" resultMap="releaseResultMap">
		SELECT
		   r.releaseCode,
		   r.releaseMergeCode,
		   p.productName,
		   r.releaseGoodsCount,
		   c.contractorName,
		   r.releaseRequestDate
		FROM
		   k3_tb_release AS r
		   INNER JOIN
		   k3_tb_contractor_staff AS c
		   on
		   r.contractorId = c.contractorId
		   INNER JOIN
			k3_tb_product AS p
			ON
			r.productCode = p.productCode
		WHERE
			r.releaseAllow = 'Y' AND r.shipmentCheckResult IS NULL;
	</select>
	
	<!--출하검수조회  -->
	<select id="k3GetShipmentSearchList" parameterType="Map" resultType="Map">
		SELECT
			r.releaseCode,
			p.productName,
			r.releaseGoodsCount,
			cs.contractorName,
			r.acceptDate,
			r.releaseDate,
			r.recipientName,
			r.shipmentCheckManager,
			r.shipmentCheckRegDate,
			r.shipmentCheckResult
		FROM
			k3_tb_release AS r
			INNER JOIN
			k3_tb_stock AS s
			ON
			r.stockCode = s.stockCode
			INNER JOIN	
			k3_tb_warehousing AS w
			ON
			s.warehousingCode = w.warehousingCode
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			w.contractorId = cs.contractorId
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode
			<choose>
				<when test="searchCondition.searchShipmentType != null and searchCondition.searchShipmentType != ''.toString()">
					<trim prefix="WHERE" prefixOverrides="AND |OR">
						<if test="searchCondition.shipmentValue != null and searchCondition.shipmentValue != ''.toString()">
							${searchCondition.shipmentKey} LIKE CONCAT('%',#{searchCondition.shipmentValue},'%') 
						</if>	
						<if test="searchCondition.searchStartDate != null and searchCondition.searchStartDate != ''.toString()">
							AND ${searchCondition.shipmentDateKey} >= #{searchCondition.searchStartDate}
						</if>	
						<if test="searchCondition.searchEndDate != null and searchCondition.searchEndDate != ''.toString()">
				   			AND #{searchCondition.searchEndDate} >=  ${searchCondition.shipmentDateKey}
						</if>
							AND r.releaseAllow = 'Y'  AND r.shipmentCheckResult IS NOT NULL
					</trim>
				</when>
				<otherwise>
					WHERE
						r.releaseAllow = 'Y'  AND r.shipmentCheckResult IS NOT NULL
				</otherwise>
			</choose>
		<if test="paramMap.startNum != null">
			LIMIT #{paramMap.startNum}, #{paramMap.rowPerPage};
		</if>
	</select>

	<!-- 출하검수 현황(초기화면) - 입하검수리스트  -->	
	<select id="k3GetShipmentCheck" resultType="map" parameterType="map">
		SELECT
			r.releaseCode,
			p.productName,
			r.releaseGoodsCount,
			cs.contractorName,
			r.acceptDate,
			r.releaseDate,
			r.recipientName,
			r.shipmentCheckManager,
			r.shipmentCheckRegDate,
			r.shipmentCheckResult
		FROM
			k3_tb_release AS r
			INNER JOIN
			k3_tb_stock AS s
			ON
			r.stockCode = s.stockCode
			INNER JOIN	
			k3_tb_warehousing AS w
			ON
			s.warehousingCode = w.warehousingCode
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			w.contractorId = cs.contractorId
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode
		WHERE
			r.releaseAllow = 'Y'  AND r.shipmentCheckResult IS NOT NULL
		<if test="startNum != null">
			LIMIT #{startNum}, #{rowPerPage};
		</if>
	</select>

	<!--출하검수 현황(초기화면) - 출하검수리스트 튜플 수  -->
	<select id="k3GetShipmentCheckCount" resultType="int" fetchSize="1000">
		SELECT
			COUNT(1)
		FROM
			k3_tb_release AS r
			INNER JOIN
			k3_tb_stock AS s
			ON
			r.stockCode = s.stockCode
			INNER JOIN	
			k3_tb_warehousing AS w
			ON
			s.warehousingCode = w.warehousingCode
			INNER JOIN
			k3_tb_contractor_staff AS cs
			ON
			w.contractorId = cs.contractorId
			INNER JOIN
			k3_tb_product AS p
			ON
			w.productCode = p.productCode
		WHERE
			r.releaseAllow = 'Y'  AND r.shipmentCheckResult IS NOT NULL
		<if	test="countType eq 'search'.toString()">
		   	<if test="searchCondition.searchShipmentType != null and searchCondition.searchShipmentType != ''.toString()">
				<if test="searchCondition.shipmentValue != null and searchCondition.shipmentValue != ''.toString()">
		   			AND ${searchCondition.shipmentKey} LIKE CONCAT('%',#{searchCondition.shipmentValue},'%') 
				</if>	
				<if test="searchCondition.searchStartDate != null and searchCondition.searchStartDate != ''.toString()">
		   			AND ${searchCondition.shipmentDateKey} >= #{searchCondition.searchStartDate}
				</if>	
				<if test="searchCondition.searchEndDate != null and searchCondition.searchEndDate != ''.toString()">
		   			AND #{searchCondition.searchEndDate} >=  ${searchCondition.shipmentDateKey}
				</if>
			</if>		
		</if>
	</select>
</mapper>