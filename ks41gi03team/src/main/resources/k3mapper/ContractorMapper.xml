<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="k3.contractor.ahs.mapper.K3ContractorMapper">
<!-- 	<resultMap type="K3Contract" id="contractResultMap">
		<result column="contractCode"     property="contractCode"/>
		<result column="contraactorCode"     property="contraactorCode"/>
		<result column="contractorDevision"     property="contractorDevision"/>
		<result column="contractState"     property="contractState"/>
		<result column="contractSingningDate"     property="contractSingningDate"/>
		<result column="contractorId"     property="contractorId"/>
		<result column="memberId"     property="memberId"/>
	</resultMap> -->
	
	<!-- 거래처 등록하기 -->
	<insert id="k3AddContractor" parameterType="K3DetailContractor">
		INSERT INTO 
				k3_tb_contractor_staff
					(contractorId, mainBusinessCode, contractorPw, 
					memberId, levelCode, contractorType, 
					contractorName, contractorRepresentative, contractorPhone, 
					contractorSuperviser, contractorSuperviserPhone)
				VALUES 
					(#{contractorId}, '물류센터A물류센터_고양_1', #{contractorPw}, 
					'm_c17', #{levelCode}, #{contractorType}, 
					#{contractorName}, #{contractorRepresentative}, #{contractorPhone}, 
					#{contractorSuperviser}, #{contractorSuperviserPhone});
	</insert>
 	<insert id="k3AddDetailContractor" parameterType="K3DetailContractor">
 		INSERT INTO 
				k3_tb_contractor
					(contractorCode, mainBusinessCode, contractorBusinessNum, 
					contractorAddr, contractorEmail, contractorSuperviserEmail, 
					contractorItem, contractorStatus, contractorProfitBank, 
					contractorProfitAccount, contractorAccountHolder, contractorId, 
					memberId, contractorRegistrationDate, contractorBusinessClientNum, 
					contractorDevision, contractorFax, contractorState)
				VALUES 
					(#{contractorCode}, '물류센터A물류센터_고양_1', #{contractorBusinessNum}, 
					#{contractorAddr}, #{contractorEmail}, #{contractorSuperviserEmail}, 
					#{contractorItem}, #{contractorStatus}, #{contractorProfitBank}, 
					#{contractorProfitAccount}, #{contractorAccountHolder}, #{contractorId}, 
					'm_c17', curdate(), #{contractorBusinessClientNum}, 
					#{contractorDevision}, #{contractorFax}, #{contractorState});
	</insert>
	
	<!-- 검색된 거래처 투플 수(페이징) -->
	<select id="K3SearchContractorCount" resultType="int" fetchSize="1000">
		SELECT
			COUNT(1)
		FROM
			k3_tb_contractor AS c
			INNER join
			k3_tb_contractor_staff AS cs
			on
			c.contractorId = cs.contractorId;
		<trim prefix="WHERE" prefixOverrides="AND /OR">
			<if test="searchValue != null and searchValue != ''.toString()">
				${searchKey} LIKE CONCAT('%', #{searchValue}, '%');
			</if>
		</trim>					
	</select>	
	
	<!-- 검색된 거래처 정보 -->
	<select id="K3SearchContractorList" parameterType="map" resultType="map">
		SELECT
			c.contractorCode
			,cs.contractorName
			,c.contractorItem
			,c.contractorStatus
			,c.contractorDevision
			,cs.contractorPhone
			,c.contractorRegistrationDate
			,c.contractorId
			,c.contractorState
			,c.memberId
		FROM
			k3_tb_contractor AS c
			INNER join
			k3_tb_contractor_staff AS cs
			on
			c.contractorId = cs.contractorId
		<trim prefix="WHERE" prefixOverrides="AND /OR">
			<if test="searchKey = contractorRegistrationDate and searchValue != ''.toString()">
				 WHERE contractorRegistrationDate
	 			BETWEEN DATE('#{contractorRegistrationDateStart}') AND DATE('#{contractorRegistrationDateEnd}');
			</if>
			<if test="searchValue != null and searchValue != ''.toString()">
				${searchKey} LIKE CONCAT('%', #{searchValue}, '%');
			</if>
		</trim>
	</select>

	<!-- 거래처 상세정보 불러오기 -->
	<select id="K3GetDetailContractor" parameterType="String" resultType="K3DetailContractor">
		SELECT	c.contractorCode
			, cs.contractorName
			, c.contractorBusinessNum
			, cs.mainBusinessCode	
			, c.contractorDevision
			, cs.contractorType
			, c.contractorItem
			, c.contractorStatus
			, cs.contractorRepresentative
			, c.contractorBusinessClientNum
			, c.contractorAddr
			, cs.contractorPhone
			, c.contractorEmail
			, cs.contractorSuperviser
			, cs.contractorSuperviserPhone
			, c.contractorSuperviserEmail
			, c.contractorFax
			, c.contractorProfitBank
			, c.contractorProfitAccount
			, c.contractorAccountHolder
			, cs.contractorId
			, cs.contractorPw
			, cs.levelCode
			, c.contractorState
			, cs.memberId
			, c.contractorRegistrationDate
		FROM 
			k3_tb_contractor_staff AS cs
			INNER join
			k3_tb_contractor AS c
			on
			cs.contractorId = c.contractorId
		where
			c.contractorCode = #{contractorCode};
	</select>
	
	<!-- 거래처 투플 수(페이징) -->
	<select id="K3GetContractorCount" resultType="int" fetchSize="1000">
		SELECT
			COUNT(1)
		FROM
			k3_tb_contractor AS c
			INNER join
			k3_tb_contractor_staff AS cs
			on
			c.contractorId = cs.contractorId;					
	</select>

	<!-- 거래처 목록 간단 현황으로 불러오기(페이징) -->
	<select id="K3GetContractorList" parameterType="map" resultType="map" >
		SELECT
			c.contractorCode
			,cs.contractorName
			,c.contractorItem
			,c.contractorStatus
			,c.contractorDevision
			,cs.contractorPhone
			,c.contractorRegistrationDate
			,c.contractorId
			,c.contractorState
			,c.memberId
		FROM
			k3_tb_contractor AS c
			INNER join
			k3_tb_contractor_staff AS cs
			on
			c.contractorId = cs.contractorId
		<if test="startNum != null">
			LIMIT #{startNum}, #{rowPerPage};
		</if>			
	</select>

</mapper>